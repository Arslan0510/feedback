[{"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\index.js":"1","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\reportWebVitals.js":"2","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\App.jsx":"3","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\store.js":"4","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\index.js":"5","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\helpers\\index.jsx":"6","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\index.jsx":"7","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\index.js":"8","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\helpers\\history.jsx":"9","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\index.js":"10","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\index.js":"11","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\configs\\index.js":"12","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_auth.js":"13","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_projects.js":"14","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\index.js":"15","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\index.js":"16","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\auth\\Register\\index.jsx":"17","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\auth\\Login\\index.jsx":"18","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\newArray.js":"19","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\endPoints.js":"20","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\paginate.js":"21","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\environment.js":"22","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\api.js":"23","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\interceptors.js":"24","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\constants.js":"25","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Developers\\index.jsx":"26","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddDeveloper\\index.jsx":"27","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\index.jsx":"28","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\CompletedFeedback\\index.jsx":"29","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Dashboard\\index.jsx":"30","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\ProjectDetails\\index.jsx":"31","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Projects\\index.jsx":"32","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\index.js":"33","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\mocks\\index.js":"34","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddDeveloper\\validation.schema.js":"35","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\validation.schema.js":"36","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\assets\\index.js":"37","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\auth\\index.js":"38","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\index.js":"39","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\AddDevelopers\\index.jsx":"40","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\ProjectDetails\\DetailCard\\index.jsx":"41","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\developers.js":"42","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\projects.js":"43","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_developers.js":"44","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\Card\\index.jsx":"45","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\CardView\\index.jsx":"46","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\DeveloperCard\\index.jsx":"47","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\ProjectCard\\index.jsx":"48","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\CredentialButton\\index.jsx":"49","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\FloatingButton\\index.jsx":"50","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\FormButton\\index.jsx":"51","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\CredentialField\\index.jsx":"52","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\ImageInput\\index.jsx":"53","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\InputField\\index.jsx":"54","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Layout\\index.jsx":"55","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Loader\\index.jsx":"56","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Dropdown\\index.jsx":"57","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Sidebar\\index.jsx":"58","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\NoContent\\index.jsx":"59","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Pagination\\index.jsx":"60","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\DCard\\index.jsx":"61"},{"size":603,"mtime":1608287761206,"results":"62","hashOfConfig":"63"},{"size":375,"mtime":1608197558828,"results":"64","hashOfConfig":"63"},{"size":1126,"mtime":1610541091681,"results":"65","hashOfConfig":"63"},{"size":300,"mtime":1608197558843,"results":"66","hashOfConfig":"63"},{"size":79,"mtime":1610528269430,"results":"67","hashOfConfig":"63"},{"size":28,"mtime":1608197558826,"results":"68","hashOfConfig":"63"},{"size":1726,"mtime":1610541091718,"results":"69","hashOfConfig":"63"},{"size":296,"mtime":1610545926894,"results":"70","hashOfConfig":"63"},{"size":99,"mtime":1608197558825,"results":"71","hashOfConfig":"63"},{"size":91,"mtime":1610528831551,"results":"72","hashOfConfig":"63"},{"size":748,"mtime":1610528182139,"results":"73","hashOfConfig":"63"},{"size":812,"mtime":1610099817255,"results":"74","hashOfConfig":"63"},{"size":362,"mtime":1608197558842,"results":"75","hashOfConfig":"63"},{"size":490,"mtime":1609246837853,"results":"76","hashOfConfig":"63"},{"size":407,"mtime":1610099705905,"results":"77","hashOfConfig":"63"},{"size":1103,"mtime":1610613410022,"results":"78","hashOfConfig":"63"},{"size":2802,"mtime":1610612750246,"results":"79","hashOfConfig":"63"},{"size":2578,"mtime":1610612744203,"results":"80","hashOfConfig":"63"},{"size":1015,"mtime":1610629729536,"results":"81","hashOfConfig":"63"},{"size":946,"mtime":1610528175744,"results":"82","hashOfConfig":"63"},{"size":205,"mtime":1610528283457,"results":"83","hashOfConfig":"63"},{"size":88,"mtime":1608809154024,"results":"84","hashOfConfig":"63"},{"size":1617,"mtime":1608809177175,"results":"85","hashOfConfig":"63"},{"size":206,"mtime":1609240419518,"results":"86","hashOfConfig":"63"},{"size":253,"mtime":1610545561614,"results":"87","hashOfConfig":"63"},{"size":1579,"mtime":1610631405171,"results":"88","hashOfConfig":"63"},{"size":6293,"mtime":1610707515217,"results":"89","hashOfConfig":"63"},{"size":9507,"mtime":1610629900235,"results":"90","hashOfConfig":"63"},{"size":1490,"mtime":1610528415632,"results":"91","hashOfConfig":"63"},{"size":625,"mtime":1610099653601,"results":"92","hashOfConfig":"63"},{"size":525,"mtime":1610612816630,"results":"93","hashOfConfig":"63"},{"size":1428,"mtime":1610541091716,"results":"94","hashOfConfig":"63"},{"size":54,"mtime":1608197558842,"results":"95","hashOfConfig":"63"},{"size":104,"mtime":1608197558839,"results":"96","hashOfConfig":"63"},{"size":249,"mtime":1609941660686,"results":"97","hashOfConfig":"63"},{"size":1178,"mtime":1610627573695,"results":"98","hashOfConfig":"63"},{"size":277,"mtime":1610541091683,"results":"99","hashOfConfig":"63"},{"size":1169,"mtime":1608810056420,"results":"100","hashOfConfig":"63"},{"size":60,"mtime":1609942256380,"results":"101","hashOfConfig":"63"},{"size":1647,"mtime":1609151405126,"results":"102","hashOfConfig":"63"},{"size":2076,"mtime":1610612832297,"results":"103","hashOfConfig":"63"},{"size":2358,"mtime":1610707139884,"results":"104","hashOfConfig":"63"},{"size":853,"mtime":1610629736323,"results":"105","hashOfConfig":"63"},{"size":355,"mtime":1610545605161,"results":"106","hashOfConfig":"63"},{"size":543,"mtime":1610611765537,"results":"107","hashOfConfig":"63"},{"size":655,"mtime":1610612447381,"results":"108","hashOfConfig":"63"},{"size":2020,"mtime":1610546501294,"results":"109","hashOfConfig":"63"},{"size":3550,"mtime":1610630612626,"results":"110","hashOfConfig":"63"},{"size":486,"mtime":1609843837138,"results":"111","hashOfConfig":"63"},{"size":290,"mtime":1609841681895,"results":"112","hashOfConfig":"63"},{"size":598,"mtime":1610543189212,"results":"113","hashOfConfig":"63"},{"size":593,"mtime":1609843603500,"results":"114","hashOfConfig":"63"},{"size":451,"mtime":1610542610029,"results":"115","hashOfConfig":"63"},{"size":640,"mtime":1608812108370,"results":"116","hashOfConfig":"63"},{"size":860,"mtime":1610550335951,"results":"117","hashOfConfig":"63"},{"size":393,"mtime":1608214762498,"results":"118","hashOfConfig":"63"},{"size":805,"mtime":1610626419162,"results":"119","hashOfConfig":"63"},{"size":1349,"mtime":1610099951605,"results":"120","hashOfConfig":"63"},{"size":569,"mtime":1610543578464,"results":"121","hashOfConfig":"63"},{"size":1035,"mtime":1609765712045,"results":"122","hashOfConfig":"63"},{"size":938,"mtime":1610619981506,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1wd5h90",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\index.js",[],["253","254"],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\reportWebVitals.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\App.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\store.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\helpers\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\helpers\\history.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\configs\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_auth.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_projects.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\auth\\Register\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\auth\\Login\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\newArray.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\endPoints.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\paginate.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\environment.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\apis\\api.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\utils\\interceptors.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\constants.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Developers\\index.jsx",["255","256"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { DCard, DeveloperCard, Layout, Loader } from \"../../../components\";\r\nimport { allDevelopers } from \"../../../store/actions\";\r\n\r\nimport \"./developers.css\";\r\n\r\nconst Developers = () => {\r\n  const [teamLeadArray, setTeamLeadArray] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { developers } = useSelector((state) => state.reducer_developers);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (developers.length === 0)\r\n      allDevelopers({\r\n        dispatch,\r\n        cbSuccess: (teamLead) => {\r\n          setTeamLeadArray(teamLead);\r\n          setLoading(false);\r\n        },\r\n        cbFailure: (err) => {\r\n          setLoading(false);\r\n          toast.error(err);\r\n        },\r\n      });\r\n    else setLoading(false);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Layout title='Developers'>\r\n      <div className='container'>\r\n        <div className='row mb-2'>\r\n          {developers.length !== 0 &&\r\n            developers.map((dev) => (\r\n              <DeveloperCard\r\n                key={dev._id}\r\n                developer={dev}\r\n                teamLeadArray={\r\n                  teamLeadArray &&\r\n                  teamLeadArray.filter((el) => el._id === dev.teamLead)\r\n                }\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Developers;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddDeveloper\\index.jsx",["257"],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\index.jsx",["258","259","260","261","262","263"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddDevelopers from \"./AddDevelopers\";\r\nimport { feedback, allDevelopers, getTeamLead } from \"../../../store/actions\";\r\nimport { Dropdown, InputField, FormButton, Layout } from \"../../../components\";\r\nimport { validationSchema, additionalValidation } from \"./validation.schema\";\r\nimport {\r\n  developerNames,\r\n  teamLeadName,\r\n  techStackArray,\r\n  removeEmptyStrings,\r\n} from \"../../../services\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nimport \"./feedback.css\";\r\n\r\nconst AddFeedback = () => {\r\n  const [state, setState] = useState({ developers: [], teamLeads: [] });\r\n  const [developers, setDevelopers] = useState([]);\r\n  const [teamLead, setTeamLead] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n  const [formikValues, setFormikValues] = useState();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    allDevelopers({\r\n      cbSuccess: (developers, teamLeads) => {\r\n        setState({\r\n          ...state,\r\n          developers: developerNames(developers),\r\n          teamLeads: teamLeadName(teamLeads),\r\n        });\r\n\r\n        setLoading(false);\r\n      },\r\n      cbFailure: (err) => {\r\n        toast.error(err);\r\n        setLoading(false);\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const _submitFeedback = (values) => {\r\n    // setFormikValues(values);\r\n    feedback({\r\n      data: removeEmptyStrings({ ...values, developers }),\r\n      cbSuccess: () => {\r\n        toast.success(\"🦄 Feedback noted!\");\r\n        setLoading(false);\r\n      },\r\n      cbFailure: (err, duplicate) => {\r\n        if (duplicate === \"LIKE_PROJECT\") {\r\n          getThisDone();\r\n          setLoading(false);\r\n        } else {\r\n          toast.error(err);\r\n          setLoading(false);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true);\r\n    feedback({\r\n      data: removeEmptyStrings({ ...values, developers, teamLead }),\r\n      cbSuccess: () => {\r\n        toast.success(\"🦄 Feedback noted!\");\r\n        setLoading(false);\r\n      },\r\n      cbFailure: (err, duplicate) => {\r\n        if (duplicate === \"LIKE_PROJECT\") {\r\n          getThisDone();\r\n          setLoading(false);\r\n        } else {\r\n          toast.error(err);\r\n          setLoading(false);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  const getThisDone = () => {\r\n    const getAlert = () => (\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText='Yes, update it!'\r\n        confirmBtnBsStyle='danger'\r\n        title='Feedback is Already given before, want to update it?'\r\n        onConfirm={onConfirm}\r\n        onCancel={() => setAlert(null)}\r\n        focusCancelBtn>\r\n        Feedback already given before!\r\n      </SweetAlert>\r\n    );\r\n    setAlert(getAlert());\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    _submitFeedback(formikValues, true);\r\n    setAlert(null);\r\n  };\r\n\r\n  const handleDropdown = (options, title) => {\r\n    if (title === \"dev\") {\r\n      setDevelopers(options);\r\n    } else if (title === \"teamLead\") setTeamLead(options.value);\r\n  };\r\n\r\n  return (\r\n    <Layout title='Feedback'>\r\n      {alert}\r\n      <div className='container-contact100'>\r\n        <div className='wrap-contact100'>\r\n          <Formik\r\n            initialValues={{\r\n              projectName: \"\",\r\n              clientName: \"\",\r\n              clientEmail: \"\",\r\n              projectManagerName: \"\",\r\n              projectManagerEmail: \"\",\r\n              projectDescription: \"\",\r\n            }}\r\n            validationSchema={validationSchema}\r\n            // validate={() => additionalValidation(developers, setDevelopers)}\r\n            onSubmit={(values) => handleSubmit(values)}>\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <form\r\n                className='contact100-form validate-form'\r\n                onSubmit={handleSubmit}>\r\n                <span className='contact100-form-title'>New Feedback</span>\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 validate-input bg1'\r\n                  handleChange={handleChange(\"projectName\")}\r\n                  errors={errors.projectName}\r\n                  touched={touched.projectName}\r\n                  labelName='PROJECT NAME'\r\n                  placeholder='Enter Project Name'\r\n                  type='text'\r\n                  name='projectName'\r\n                  asterisk={true}\r\n                />\r\n\r\n                {/* <AddDevelopers\r\n                  developers={developers}\r\n                  setDevelopers={setDevelopers}\r\n                /> */}\r\n\r\n                <Dropdown\r\n                  dName='dev'\r\n                  handleChange={handleDropdown}\r\n                  multiSelect={true}\r\n                  options={state.developers}\r\n                  title='Select Developer'\r\n                />\r\n                <Dropdown\r\n                  dName='teamLead'\r\n                  handleChange={handleDropdown}\r\n                  multiSelect={false}\r\n                  options={state.teamLeads}\r\n                  title='Select Team Lead'\r\n                />\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"clientName\")}\r\n                  errors={errors.clientName}\r\n                  touched={touched.clientName}\r\n                  labelName='Client Name'\r\n                  placeholder='Enter Client Name'\r\n                  type='text'\r\n                  name='clientName'\r\n                  asterisk={true}\r\n                />\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 validate-input bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"clientEmail\")}\r\n                  errors={errors.clientEmail}\r\n                  touched={touched.clientEmail}\r\n                  labelName='Client Email'\r\n                  placeholder='Enter Client Email'\r\n                  type='email'\r\n                  name='clientEmail'\r\n                  asterisk={true}\r\n                />\r\n\r\n                {/* <InputField\r\n                  className='wrap-input100 border-0 bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"teamLeadName\")}\r\n                  errors={errors.teamLeadName}\r\n                  touched={touched.teamLeadName}\r\n                  labelName='Team Lead Name'\r\n                  placeholder='Enter Team Lead Name'\r\n                  type='text'\r\n                  name='teamLeadName'\r\n                  asterisk={true}\r\n                />\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 validate-input bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"teamLeadEmail\")}\r\n                  errors={errors.teamLeadEmail}\r\n                  touched={touched.teamLeadEmail}\r\n                  labelName='Team Lead Email'\r\n                  placeholder='Enter Team Lead Email'\r\n                  type='email'\r\n                  name='teamLeadEmail'\r\n                  asterisk={false}\r\n                /> */}\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"projectManagerName\")}\r\n                  errors={errors.projectManagerName}\r\n                  touched={touched.projectManagerName}\r\n                  labelName='Project Manager Name'\r\n                  placeholder='Enter Project Manager Name'\r\n                  type='text'\r\n                  name='projectManagerName'\r\n                  asterisk={true}\r\n                />\r\n\r\n                <InputField\r\n                  className='wrap-input100 border-0 validate-input bg1 rs1-wrap-input100'\r\n                  handleChange={handleChange(\"projectManagerEmail\")}\r\n                  errors={errors.projectManagerEmail}\r\n                  touched={touched.projectManagerEmail}\r\n                  labelName='Project Manager Email'\r\n                  placeholder='Enter Project Manager Email'\r\n                  type='email'\r\n                  name='projectManagerEmail'\r\n                  asterisk={false}\r\n                />\r\n\r\n                <div\r\n                  className='wrap-input100 validate-input bg0 rs1-alert-validate'\r\n                  data-validate='Please Type Your Message'>\r\n                  <span className='label-input100'>\r\n                    Project description (optional)\r\n                  </span>\r\n                  <textarea\r\n                    className='input100'\r\n                    name='projectDescription'\r\n                    onChange={handleChange(\"projectDescription\")}\r\n                    placeholder='Your message here...'></textarea>\r\n                  <p style={{ color: \"red\" }}>\r\n                    {errors.description &&\r\n                      touched.description &&\r\n                      errors.description}\r\n                  </p>\r\n                </div>\r\n\r\n                <FormButton\r\n                  loading={loading}\r\n                  text='Generate Project Feedback'\r\n                />\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AddFeedback;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\CompletedFeedback\\index.jsx",["264"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CardView, Loader, Layout, Pagination } from \"../../../components\";\r\nimport { getAllProjects } from \"../../../store/actions\";\r\nimport { paginate } from \"../../../services\";\r\n\r\nconst CompletedFeedback = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const { completedProjects } = useSelector((state) => state.reducer_projects);\r\n  const dispatch = useDispatch();\r\n  const isCompleted = true;\r\n\r\n  useEffect(() => {\r\n    if (completedProjects.length === 0) getProjects();\r\n  }, []);\r\n\r\n  const getProjects = () => {\r\n    setLoading(true);\r\n    getAllProjects({\r\n      isCompleted,\r\n      dispatch,\r\n      cbSuccess: () => setLoading(false),\r\n      cbFailure: (err) => {\r\n        setLoading(false);\r\n        toast.error(err);\r\n      },\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Layout title='Completed Feedback'>\r\n      <CardView\r\n        getProjects={getProjects}\r\n        history={history}\r\n        list={paginate(completedProjects, currentPage, 6)}\r\n      />\r\n      <Pagination\r\n        itemsCount={completedProjects.length}\r\n        pageSize={6}\r\n        currentPage={currentPage}\r\n        onPageChange={(num) => setCurrentPage(num)}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CompletedFeedback;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Dashboard\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\ProjectDetails\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\Projects\\index.jsx",["265"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { getAllProjects } from \"../../../store/actions\";\r\nimport { CardView, Layout, Loader, Pagination } from \"../../../components\";\r\nimport { paginate } from \"../../../services\";\r\n\r\nimport \"./projects.css\";\r\n\r\nconst Projects = ({ history }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const { projects } = useSelector((state) => state.reducer_projects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (projects.length === 0) getProjects();\r\n  }, []);\r\n\r\n  const getProjects = () => {\r\n    setLoading(true);\r\n    getAllProjects({\r\n      dispatch,\r\n      cbSuccess: () => setLoading(false),\r\n      cbFailure: (err) => {\r\n        setLoading(false);\r\n        toast.error(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Layout title='Projects' onRefresh={getProjects}>\r\n      <CardView\r\n        getProjects={getProjects}\r\n        history={history}\r\n        list={paginate(projects, currentPage, 6)}\r\n      />\r\n      <Pagination\r\n        itemsCount={projects.length}\r\n        pageSize={6}\r\n        currentPage={currentPage}\r\n        onPageChange={(num) => setCurrentPage(num)}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\services\\mocks\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddDeveloper\\validation.schema.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\validation.schema.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\assets\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\auth\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\index.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\AddFeedback\\AddDevelopers\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\routes\\app-flow\\ProjectDetails\\DetailCard\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\developers.js",["266"],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\actions\\app-flow\\projects.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\store\\reducers\\reducer_developers.js",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\Card\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\CardView\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\DeveloperCard\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\ProjectCard\\index.jsx",["267","268"],"import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst ProjectCard = ({ project }) => {\r\n  const {\r\n    clientName,\r\n    teamLeadName,\r\n    projectManagerName,\r\n    developers,\r\n    isCompleted,\r\n    projectName,\r\n    projectDescription,\r\n    _id,\r\n  } = project;\r\n  const history = useHistory();\r\n\r\n  // return (\r\n  //   <div className='Container containerHeight'>\r\n  //     {isCompleted ? (\r\n  //       <div className='Top'>\r\n  //         <div\r\n  //           className='TagContainer'\r\n  //           style={{ backgroundColor: colors.green }}>\r\n  //           <div>Completed</div>\r\n  //         </div>\r\n  //       </div>\r\n  //     ) : (\r\n  //       <div className='Top'>\r\n  //         <div\r\n  //           className='TagContainer'\r\n  //           style={{ backgroundColor: colors.appColor }}>\r\n  //           <div>Awaiting Feedback</div>\r\n  //         </div>\r\n  //       </div>\r\n  //     )}\r\n  //     <div className='Content'>\r\n  //       <div style={{ width: 310 }}>\r\n  //         <h4 className='Title'>{projectName ? projectName : \"No title\"}</h4>\r\n  //         <p className='Subtitle'>\r\n  //           {projectDescription\r\n  //             ? projectDescription\r\n  //             : \"No description available\"}\r\n  //         </p>\r\n  //         <p className='CTA'>\r\n  //           Developer Name:{\" \"}\r\n  //           {developers.length !== 0\r\n  //             ? developers.map((dev) => dev.name)\r\n  //             : \"Not available\"}\r\n  //         </p>\r\n  //         <p className='CTA'>\r\n  //           Client Name: {clientName ? clientName : \"Not available\"}\r\n  //         </p>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <div className='col-4 p-3 m-0 position-relative'>\r\n      <Card className='w-100 m-0 position-relative'>\r\n        <Card.Header className='row m-0 justify-content-between align-items-center'>\r\n          <h4 className='font-weight-light  p-0 m-0'>{projectName}</h4>\r\n          <span\r\n            className={`${\r\n              isCompleted ? \"badge-success\" : \"badge-danger\"\r\n            } px-2 py-1 rounded small font-weight-bold`}>\r\n            {isCompleted ? \"Completed\" : \"Awaiting feedback\"}\r\n          </span>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {/* <Card.Text> */}\r\n          <h5 className='font-weight-light'>Team</h5>\r\n          <div className='row p-0 m-0'>\r\n            {developers.map(({ developerName }, i) => (\r\n              <Button\r\n                variant='light'\r\n                size='sm'\r\n                className='p-1 px-3 m-1 rounded-pill border'>\r\n                {developerName}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <p className='description-text p-0 m-0'>{projectDescription}</p>\r\n          {/* <p className=\"p-0 m-0\">\r\n              <strong>Team lead</strong> {teamLeadName}\r\n            </p> */}\r\n          <p className='p-0 m-0'>\r\n            <strong>Client</strong> {clientName}\r\n          </p>\r\n          {/* <p className=\"p-0 m-0\">\r\n              <strong>Project manager</strong> {projectManagerName}\r\n            </p> */}\r\n          {/* </Card.Text> */}\r\n          <div className='text-right'>\r\n            <Button\r\n              onClick={() => history.push(`/projectDetails/${_id}`)}\r\n              variant='secondary'\r\n              size='sm'>\r\n              View details\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\CredentialButton\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\FloatingButton\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\ButtonComp\\FormButton\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\CredentialField\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\ImageInput\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\InputFieldComp\\InputField\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Layout\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Loader\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Dropdown\\index.jsx",["269"],"import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nconst Dropdown = ({\r\n  dName,\r\n  disable,\r\n  handleChange,\r\n  handleInputChange,\r\n  loadOptions,\r\n  multiSelect,\r\n  options,\r\n  selectedOption,\r\n  title,\r\n}) => {\r\n  return (\r\n    <div className='wrap-input100 border-0 bg1 rs1-wrap-input100'>\r\n      <span className='label-input100 mb-1'>{title}</span>\r\n      <Select\r\n        className='basic-multi-select mt-3'\r\n        classNamePrefix='select'\r\n        isDisabled={disable}\r\n        isMulti={multiSelect ? true : false}\r\n        name='colors'\r\n        options={options}\r\n        onChange={(selectedOption) => handleChange(selectedOption, dName)}\r\n        value={selectedOption}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Sidebar\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\NoContent\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\OtherComp\\Pagination\\index.jsx",[],"D:\\ReactJS\\Phaedra Solution\\feedback\\src\\components\\CardComp\\DCard\\index.jsx",[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":5,"column":10,"nodeType":"276","messageId":"277","endLine":5,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":31,"column":6,"nodeType":"280","endLine":31,"endColumn":8,"suggestions":"281"},{"ruleId":"274","severity":1,"message":"282","line":18,"column":10,"nodeType":"276","messageId":"277","endLine":18,"endColumn":25},{"ruleId":"274","severity":1,"message":"283","line":5,"column":8,"nodeType":"276","messageId":"277","endLine":5,"endColumn":21},{"ruleId":"274","severity":1,"message":"284","line":6,"column":35,"nodeType":"276","messageId":"277","endLine":6,"endColumn":46},{"ruleId":"274","severity":1,"message":"285","line":8,"column":28,"nodeType":"276","messageId":"277","endLine":8,"endColumn":48},{"ruleId":"274","severity":1,"message":"286","line":12,"column":3,"nodeType":"276","messageId":"277","endLine":12,"endColumn":17},{"ruleId":"274","severity":1,"message":"287","line":25,"column":24,"nodeType":"276","messageId":"277","endLine":25,"endColumn":39},{"ruleId":"278","severity":1,"message":"288","line":44,"column":6,"nodeType":"280","endLine":44,"endColumn":8,"suggestions":"289"},{"ruleId":"278","severity":1,"message":"290","line":18,"column":6,"nodeType":"280","endLine":18,"endColumn":8,"suggestions":"291"},{"ruleId":"278","severity":1,"message":"292","line":19,"column":6,"nodeType":"280","endLine":19,"endColumn":8,"suggestions":"293"},{"ruleId":"274","severity":1,"message":"294","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":10},{"ruleId":"274","severity":1,"message":"295","line":10,"column":5,"nodeType":"276","messageId":"277","endLine":10,"endColumn":17},{"ruleId":"274","severity":1,"message":"296","line":11,"column":5,"nodeType":"276","messageId":"277","endLine":11,"endColumn":23},{"ruleId":"274","severity":1,"message":"297","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":19},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'DCard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'developers.length' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["300"],"'techStackRename' is defined but never used.","'AddDevelopers' is defined but never used.","'getTeamLead' is defined but never used.","'additionalValidation' is defined but never used.","'techStackArray' is defined but never used.","'setFormikValues' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["301"],"React Hook useEffect has missing dependencies: 'completedProjects.length' and 'getProjects'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'getProjects' and 'projects.length'. Either include them or remove the dependency array.",["303"],"'fs' is defined but never used.","'teamLeadName' is assigned a value but never used.","'projectManagerName' is assigned a value but never used.","'AsyncSelect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [developers.length, dispatch]",{"range":"312","text":"313"},"Update the dependencies array to be: [state]",{"range":"314","text":"315"},"Update the dependencies array to be: [completedProjects.length, getProjects]",{"range":"316","text":"317"},"Update the dependencies array to be: [getProjects, projects.length]",{"range":"318","text":"319"},[953,955],"[developers.length, dispatch]",[1386,1388],"[state]",[716,718],"[completedProjects.length, getProjects]",[688,690],"[getProjects, projects.length]"]